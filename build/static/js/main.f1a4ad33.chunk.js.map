{"version":3,"sources":["components/Start.js","firebase.js","redux/modules/wordList.js","components/Word.js","components/List.js","components/Detail.js","App.js","reportWebVitals.js","redux/configStore.js","index.js"],"names":["StartWrap","styled","div","Title","h1","SubTitle","p","StartButton","button","Start","props","history","useHistory","onClick","push","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getFirestore","initialState","list","selectedWord","loadWord","wordList","type","updateWord","updatedWord","deleteWord","targetIndex","TopBar","WordWrap","h2","InputBox","Text","textarea","Word","dispatch","useDispatch","wordRef","React","useRef","descRef","exRef","selectWord","useSelector","state","isEditMode","URLSearchParams","useLocation","search","get","style","height","Tooltip","title","position","right","IconButton","fontSize","color","myWord","id","word","current","value","desc","ex","getState","a","docRef","doc","updateDoc","addDoc","collection","newWord","textAlign","placeholder","defaultValue","ref","Wrap","ListWrap","Line","List","padding","textDecoration","cursor","map","l","idx","DetailWrap","Detail","wordIndex","useParams","index","ButtonStyle","left","targetId","window","alert","deleteDoc","console","log","findIndex","paddingTop","margin","App","useEffect","getDocs","wordData","forEach","data","className","maxWidth","path","exact","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","middlewares","thunk","enhancer","applyMiddleware","rootReducer","combineReducers","action","newWordList","remainigList","filter","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1a4ad33.chunk.js","sourcesContent":["import React from \"react\";\nimport { useHistory } from \"react-router\";\nimport styled from \"styled-components\";\n\nconst Start = (props) => {\n  const history = useHistory();\n\n  return (\n    <StartWrap>\n      <Title>MY DICTIONARY</Title>\n      <SubTitle>YOU CAN ALWAYS BETTER</SubTitle>\n\n      <StartButton onClick={() => history.push(\"/list\")}>START</StartButton>\n    </StartWrap>\n  );\n};\n\nconst StartWrap = styled.div`\n  background: #7eaafe;\n  height: inherit;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst Title = styled.h1`\n  font-family: \"Abril Fatface\", cursive;\n  font-size: 45px;\n  color: #fedb6c;\n  position: relative;\n  top: 20vh;\n`;\n\nconst SubTitle = styled.p`\n  font-family: \"Abril Fatface\", cursive;\n  color: #fedb6c;\n  position: relative;\n  top: 14vh;\n  font-size: 1.1em;\n`;\n\nconst StartButton = styled.button`\n  background: #fedb6c;\n  font-family: \"Abril Fatface\", cursive;\n  font-size: 30px;\n  color: #7eaafe;\n  border: none;\n  position: relative;\n  top: 40vh;\n  padding: 5px 15px;\n  cursor: pointer;\n  &:hover {\n    color: #3860ac;\n    position: relative;\n    top: 40.1vh;\n    left: 1px;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  }\n  &:active {\n    box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  }\n`;\nexport default Start;\n","// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getFirestore } from \"firebase/firestore\";\n\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCpX_kSxIUZvqDMcp4V7PBTg9-kF85NVM0\",\n  authDomain: \"my-dictionary-aefef.firebaseapp.com\",\n  projectId: \"my-dictionary-aefef\",\n  storageBucket: \"my-dictionary-aefef.appspot.com\",\n  messagingSenderId: \"140924957374\",\n  appId: \"1:140924957374:web:61c8caa385186feba2a4ef\",\n  measurementId: \"G-DJHFR0CY91\",\n};\n// firebaseConfig 정보로 firebase 시작\ninitializeApp(firebaseConfig);\n// Initialize Firebase\n// const app = initializeApp(firebaseConfig);\n\n// firebase의 firesotre 인스턴스를 변수에 저장\n// 필요한 곳에서 사용할 수 있도록 내보내기\nexport const db = getFirestore();\n","import {\n  collection,\n  doc,\n  getDoc,\n  getDocs,\n  addDoc,\n  updateDoc,\n  deleteDoc,\n} from \"firebase/firestore\";\n\nimport { db } from \"../../firebase\";\n\n// action\nconst LOAD_WORD = \"word/LOAD\";\nconst CREATE_WORD = \"word/CREATE\";\nconst SELECT_WORD = \"word/SELECT\";\nconst UPDATE_WORD = \"word/UPDATE\";\nconst DELETE_WORD = \"word/DELETE\";\n\n// state\nconst initialState = {\n  list: [],\n  selectedWord: {},\n};\n\n// action make function\nexport const loadWord = (wordList) => {\n  return { type: LOAD_WORD, wordList };\n};\n\nexport const createWord = (word) => {\n  return { type: CREATE_WORD, word };\n};\n\nexport const selectWord = (word) => {\n  return { type: SELECT_WORD, word };\n};\n\nexport const updateWord = (updatedWord) => {\n  return { type: UPDATE_WORD, updatedWord };\n};\n\nexport const deleteWord = (targetIndex) => {\n  return { type: DELETE_WORD, targetIndex };\n};\n\n// 파이어베이스와 통신\nexport const loadWordListFB = () => {\n  return async function (dispatch) {\n    const wordData = await getDocs(collection(db, \"dictionary\"));\n\n    // console.log(wordData);\n    let wordList = [];\n\n    wordData.forEach((word) => {\n      wordList.push({ id: word.id, ...word.data() });\n    });\n\n    // console.log(wordList);\n    dispatch(loadWord(wordList));\n  };\n};\n\nexport const createWordFB = (myWord) => {\n  return async function (dispatch) {\n    const docRef = await addDoc(collection(db, \"dictionary\"), myWord);\n    const newWord = { id: docRef.id, ...myWord };\n    dispatch(createWord(newWord));\n  };\n};\n\nexport const updateWordFB = (updatedWord) => {\n  return async function (dispatch, getState) {\n    // console.log(updatedWord.id);\n    const docRef = doc(db, \"dictionary\", updatedWord.id);\n    await updateDoc(docRef, {\n      id: updatedWord.id,\n      word: updatedWord.word,\n      desc: updatedWord.desc,\n      ex: updatedWord.ex,\n    });\n\n    dispatch(updateWord(updatedWord));\n  };\n};\n\nexport const deletewordFB = (targetId) => {\n  return async function (dispatch, getState) {\n    const docRef = doc(db, \"dictionary\", targetId);\n    await deleteDoc(docRef);\n\n    console.log(getState().wordList);\n    const wordList = getState().wordList.list;\n    const targetIndex = wordList.findIndex((l) => {\n      return l.id === targetId;\n    });\n    // console.log(targetIndex);\n    dispatch(deleteWord(targetIndex));\n  };\n};\n\n// reducer\nexport default function reducer(state = initialState, action = {}) {\n  switch (action.type) {\n    case \"word/LOAD\": {\n      return { list: action.wordList };\n    }\n    case \"word/CREATE\": {\n      const newWordList = [...state.list, action.word];\n      // console.log(newWordList);\n      return { ...state, list: newWordList };\n    }\n    case \"word/SELECT\": {\n      return { ...state, selectedWord: action.word };\n    }\n    case \"word/UPDATE\": {\n      const newWordList = state.list.map((l, idx) => {\n        if (l.id === action.updatedWord.id) return action.updatedWord;\n        else {\n          return l;\n        }\n      });\n      console.log(newWordList);\n      return { list: newWordList };\n    }\n    case \"word/DELETE\": {\n      const remainigList = state.list.filter((list, idx) => {\n        return 1 * action.targetIndex !== idx;\n      });\n      return { ...state, list: remainigList };\n    }\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router-dom\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\n\nimport { createWordFB, updateWordFB } from \"../redux/modules/wordList\";\n\nconst Word = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n\n  const wordRef = React.useRef(null);\n  const descRef = React.useRef(null);\n  const exRef = React.useRef(null);\n  const selectWord = useSelector((state) => state.wordList.selectedWord);\n\n  function useQuery() {\n    return new URLSearchParams(useLocation().search);\n  }\n\n  let query = useQuery();\n  const isEditMode = query.get(\"edit\");\n\n  return (\n    <div style={{ height: \"inherit\" }}>\n      <TopBar>\n        <p\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          MY DICTIONARY\n        </p>\n        <Tooltip title=\"save\" style={{ position: \"relative\", right: \"10px\" }}>\n          <IconButton>\n            <SaveAltIcon\n              style={{ fontSize: \"33px\", color: \"white\" }}\n              onClick={() => {\n                // 수정\n                if (isEditMode === \"true\") {\n                  dispatch(\n                    updateWordFB({\n                      id: selectWord.id,\n                      word: wordRef.current.value,\n                      desc: descRef.current.value,\n                      ex: exRef.current.value,\n                    })\n                  );\n                }\n                // 작성\n                else {\n                  dispatch(\n                    createWordFB({\n                      word: wordRef.current.value,\n                      desc: descRef.current.value,\n                      ex: exRef.current.value,\n                    })\n                  );\n                }\n                history.push(\"/list\");\n              }}\n            ></SaveAltIcon>\n          </IconButton>\n        </Tooltip>\n      </TopBar>\n\n      <WordWrap>\n        <Title style={{ textAlign: \"center\" }}>New Word</Title>\n        <InputBox>\n          <Text\n            placeholder=\"word\"\n            defaultValue={isEditMode ? selectWord.word : \"\"}\n            ref={wordRef}\n          ></Text>\n\n          <Text\n            style={{ height: \"150px\" }}\n            placeholder=\"description\"\n            defaultValue={isEditMode ? selectWord.desc : \"\"}\n            ref={descRef}\n          ></Text>\n\n          <Text\n            style={{ height: \"150px\" }}\n            placeholder=\"example\"\n            defaultValue={isEditMode ? selectWord.ex : \"\"}\n            ref={exRef}\n          ></Text>\n        </InputBox>\n      </WordWrap>\n    </div>\n  );\n};\n\nconst TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #7eaafe;\n  padding: 4px 0px;\n  position: fixed;\n  top: 0px;\n  width: 375px;\n  max-width: inherit;\n  & > p {\n    font-family: \"Abril Fatface\", cursive;\n    margin: 10px 20px;\n    color: #fedb6c;\n    font-size: 1.5em;\n    cursor: pointer;\n    &:hover {\n      color: #eebe27;\n      position: relative;\n      top: 2px;\n      left: 2px;\n    }\n    &:active {\n      text-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    }\n  }\n`;\n\nconst WordWrap = styled.div`\n  padding-top: 80px;\n  margin: 0px 15px;\n  height: calc(100vh - 80px);\n  & > div > input {\n    width: 80vw;\n    height: 6vh;\n  }\n`;\n\nconst Title = styled.h2`\n  font-family: \"Abril Fatface\", cursive;\n  color: #626262;\n`;\n\nconst InputBox = styled.div`\n  border: 3px solid #fedb6c;\n  padding: 16px 16px 0px 16px;\n  background: #fedb6c;\n  border-radius: 5px;\n`;\n\nconst Text = styled.textarea`\n  width: -webkit-fill-available;\n  height: 50px;\n  margin-bottom: 15px;\n  &::placeholder {\n    font-family: \"Abril Fatface\", cursive;\n    font-size: 1.3em;\n  }\n`;\n\nexport default Word;\n","import React from \"react\";\n// import { useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory } from \"react-router\";\nimport { useSelector } from \"react-redux\";\n\nimport AddIcon from \"@mui/icons-material/Add\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nconst List = (props) => {\n  const wordList = useSelector((state) => state.wordList.list);\n  const history = useHistory();\n  const plusButtonStyle = {\n    fontSize: \"40px\",\n    textDecoration: \"bold\",\n    color: \"white\",\n    cursor: \"pointer\",\n  };\n  // console.log(wordList);\n\n  return (\n    <div style={{ height: \"inherit\" }}>\n      <TopBar>\n        <p\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          MY DICTIONARY\n        </p>\n        <Tooltip title=\"add\">\n          <IconButton\n            style={{ padding: \"4px\", position: \"relative\", right: \"10px\" }}\n          >\n            <AddIcon\n              style={plusButtonStyle}\n              onClick={() => {\n                history.push(\"/word\");\n              }}\n            ></AddIcon>\n          </IconButton>\n        </Tooltip>\n      </TopBar>\n\n      <Wrap>\n        {wordList.map((l, idx) => {\n          return (\n            <ListWrap\n              key={idx}\n              onClick={() => {\n                // console.log(idx);\n                history.push(\"/detail/\" + idx);\n              }}\n            >\n              <div>\n                <p>{l.word}</p>\n              </div>\n\n              <Line />\n\n              <div>\n                <p>{l.desc}</p>\n              </div>\n\n              <Line />\n\n              <div>\n                <p style={{ color: \"#387bca\" }}>{l.ex}</p>\n              </div>\n            </ListWrap>\n          );\n        })}\n      </Wrap>\n    </div>\n  );\n};\n\nconst TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #7eaafe;\n  padding: 4px 0px;\n  position: fixed;\n  top: 0px;\n  width: 375px;\n  max-width: inherit;\n  z-index: 200;\n  & > p {\n    font-family: \"Abril Fatface\", cursive;\n    margin: 10px 20px;\n    color: #fedb6c;\n    font-size: 1.5em;\n    cursor: pointer;\n    &:hover {\n      color: #eebe27;\n      position: relative;\n      top: 2px;\n      left: 2px;\n    }\n    &:active {\n      text-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    }\n  }\n`;\n\nconst Wrap = styled.div`\n  height: inherit;\n  z-index: 1;\n  position: relative;\n  padding-top: 10vh;\n  overflow-y: scroll;\n  height: calc(100vh - 10vh);\n`;\n\nconst ListWrap = styled.div`\n  border: 3px solid #fedb6c;\n  border-radius: 3px;\n  margin: 15px;\n  background: white;\n\n  & > div > p {\n    font-family: \"Libre Baskerville\", serif;\n    padding: 0px 10px 0px 10px;\n    word-break: break-all;\n    word-wrap: normal;\n  }\n  &:hover {\n    background-color: #fae9b5;\n    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n    position: relative;\n    top: 3px;\n    left: 3px;\n  }\n`;\n\nconst Line = styled.div`\n  border-bottom: 1px solid #fedb6c;\n`;\nexport default List;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useHistory, useParams } from \"react-router\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport DeleteForeverOutlinedIcon from \"@mui/icons-material/DeleteForeverOutlined\";\nimport DriveFileRenameOutlineOutlinedIcon from \"@mui/icons-material/DriveFileRenameOutlineOutlined\";\nimport IconButton from \"@mui/material/IconButton\";\nimport Tooltip from \"@mui/material/Tooltip\";\n\nimport { deletewordFB, selectWord } from \"../redux/modules/wordList\";\n\nconst Detail = (props) => {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const params = useParams();\n  const wordIndex = params.index;\n  const wordList = useSelector((state) => state.wordList.list);\n\n  const ButtonStyle = {\n    color: \"white\",\n    fontSize: \"40px\",\n    padding: \"2px\",\n  };\n\n  return (\n    <div style={{ height: \"inherit\" }}>\n      <TopBar>\n        <p\n          onClick={() => {\n            history.push(\"/\");\n          }}\n        >\n          MY DICTIONARY\n        </p>\n        <Tooltip title=\"edit\">\n          <IconButton\n            style={{ padding: \"4px\", position: \"relative\", left: \"20px\" }}\n          >\n            <DriveFileRenameOutlineOutlinedIcon\n              style={ButtonStyle}\n              onClick={() => {\n                dispatch(selectWord(wordList[wordIndex]));\n                history.push(\"/word/?edit=true\");\n              }}\n            ></DriveFileRenameOutlineOutlinedIcon>\n          </IconButton>\n        </Tooltip>\n\n        <Tooltip title=\"delete\">\n          <IconButton\n            style={{ padding: \"4px\", position: \"relative\", right: \"10px\" }}\n          >\n            <DeleteForeverOutlinedIcon\n              style={ButtonStyle}\n              onClick={() => {\n                window.alert(\"삭제 하시겠습니까?\");\n                dispatch(deletewordFB(wordList[wordIndex].id));\n                history.push(\"/list\");\n              }}\n            ></DeleteForeverOutlinedIcon>\n          </IconButton>\n        </Tooltip>\n      </TopBar>\n\n      <div\n        style={{\n          paddingTop: \"80px\",\n          margin: \"0px 15px\",\n          height: \"calc(100vh - 80px)\",\n        }}\n      >\n        <Title>Detail Page</Title>\n        <DetailWrap>\n          <p>{wordList[wordIndex] ? wordList[wordIndex].word : \"\"}</p>\n          <p>{wordList[wordIndex] ? wordList[wordIndex].desc : \"\"}</p>\n          <p>{wordList[wordIndex] ? wordList[wordIndex].ex : \"\"}</p>\n        </DetailWrap>\n      </div>\n    </div>\n  );\n};\n\nconst TopBar = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  background: #7eaafe;\n  position: fixed;\n  top: 0px;\n  padding: 4px 0px;\n  width: 375px;\n  max-width: inherit;\n  & > p {\n    font-family: \"Abril Fatface\", cursive;\n    margin: 10px 20px;\n    color: #fedb6c;\n    font-size: 1.5em;\n    cursor: pointer;\n    &:hover {\n      color: #eebe27;\n      position: relative;\n      top: 2px;\n      left: 2px;\n    }\n    &:active {\n      text-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n    }\n  }\n`;\n\nconst Title = styled.h2`\n  font-family: \"Abril Fatface\", cursive;\n  text-align: center;\n  color: #626262;\n`;\n\nconst DetailWrap = styled.div`\n  border: 16px solid #fedb6c;\n  border-radius: 5px;\n  padding: 100px 0px;\n  & > p {\n    font-family: \"Libre Baskerville\", serif;\n    font-size: 18px;\n    text-align: center;\n    padding: 0px 30px;\n    margin: 50px 0px;\n    word-break: break-all;\n    word-wrap: normal;\n  }\n`;\nexport default Detail;\n","import React from \"react\";\nimport { Route } from \"react-router-dom\";\nimport Start from \"./components/Start\";\nimport { db } from \"./firebase\";\n\nimport Word from \"./components/Word\";\nimport List from \"./components/List\";\nimport Detail from \"./components/Detail\";\nimport { loadWordListFB } from \"./redux/modules/wordList\";\nimport { useDispatch } from \"react-redux\";\nimport styled from \"styled-components\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  React.useEffect(() => {\n    dispatch(loadWordListFB());\n  }, []);\n  return (\n    <div\n      className=\"App\"\n      style={{ height: \"100vh\", maxWidth: \"375px\", margin: \"0 auto\" }}\n    >\n      <Wrap>\n        <Route path=\"/\" exact component={Start} />\n        <Route path=\"/word\" exact component={Word} />\n        <Route path=\"/list\" exact component={List} />\n        <Route path=\"/detail/:index\" exact component={Detail} />\n      </Wrap>\n    </div>\n  );\n}\n\nconst Wrap = styled.div`\n  margin: 0 auto;\n  height: inherit;\n  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n`;\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\n\nimport wordList from \"./modules/wordList\";\n\nconst middlewares = [thunk];\n\nconst enhancer = applyMiddleware(...middlewares);\nconst rootReducer = combineReducers({ wordList });\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/configStore\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}